{"version":3,"sources":["reducers/servers.js","components/Server.jsx","components/svg/ColumnAsc.jsx","components/svg/ColumnAscEmpty.jsx","components/svg/ColumnDesc.jsx","components/svg/ColumnDescEmpty.jsx","components/Servers.jsx","api.js","components/LoginFormInputs.jsx","components/LoginForm.jsx","actions/index.js","components/Loader.jsx","App.jsx","reducers/index.js","reducers/loader.js","configureStore.js","index.js"],"names":["initialState","servers","sortedByColumnName","isAsc","serversSlice","createSlice","name","reducers","addServers","state","action","payload","sortServersAsc","sortServersDesc","logOut","actions","props","className","distance","xmlns","width","height","viewBox","d","Servers","columnName","sortedArray","this","slice","sort","a","b","reverse","map","index","key","onClick","sortServers","ColumnDescEmpty","ColumnAscEmpty","ColumnAsc","ColumnDesc","toLowerCase","object","Server","React","Component","connect","dispatch","column","useState","username","setUsername","password","setPassword","htmlFor","type","value","onChange","event","target","resetErrors","disabled","length","LoginForm","authToken","badCredentials","serverError","handleSubmit","preventDefault","toggleLoader","axios","post","API","then","response","setState","data","token","fetchServers","catch","error","status","config","headers","get","finally","onSubmit","LoginFormInputs","App","loader","combineReducers","persistConfig","storage","blacklist","persistedReducer","persistReducer","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","defaults","baseURL","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e8cda43c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n\tservers: [],\n\tsortedByColumnName: null,\n\tisAsc: false,\n};\n\nconst serversSlice = createSlice({\n\tname: 'servers',\n\tinitialState,\n\treducers: {\n\t\taddServers(state, action) {\n\t\t\tstate.servers = action.payload;\n\t\t},\n\t\tsortServersAsc(state, action) {\n\t\t\tstate.isAsc = true;\n\t\t\tstate.sortedByColumnName = action.payload;\n\t\t},\n\t\tsortServersDesc(state, action) {\n\t\t\tstate.isAsc = false;\n\t\t\tstate.sortedByColumnName = action.payload;\n\t\t},\n\t\tlogOut: state => initialState\n\t},\n})\nexport const { addServers, sortServersAsc, sortServersDesc, logOut } = serversSlice.actions\nexport default serversSlice.reducer","import React from 'react'\n\nexport default (props) => {\n\treturn (<tr className=\"server\">\n\t\t\t<td>{props.name}</td>\n\t\t\t<td>{props.distance}</td>\n\t\t</tr>);\n};","import React from 'react';\n\nexport default () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\"><path d=\"M24 3l-12 18-12-18z\"/></svg>\n\t);\n}","import React from 'react';\n\nexport default () => {\n\treturn (\n\t\t<svg className=\"cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\"><path d=\"M12 17.395l-8.263-12.395h16.525l-8.262 12.395zm0 3.605l12-18h-24l12 18z\"/></svg>\n\t)\n}","import React from 'react';\n\nexport default () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\"><path d=\"M0 21l12-18 12 18z\"/></svg>\n\t)\n}","import React from 'react';\n\nexport default () => {\n\treturn (\n\t\t<svg className=\"cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\"><path d=\"M12 6.605l8.263 12.395h-16.526l8.263-12.395zm0-3.605l-12 18h24l-12-18z\"/></svg>\n\t);\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport './Servers.scss'\nimport { addServers, sortServersAsc, sortServersDesc } from '../reducers/servers';\nimport Server from './Server'\nimport ColumnAsc from './svg/ColumnAsc'\nimport ColumnAscEmpty from './svg/ColumnAscEmpty'\nimport ColumnDesc from './svg/ColumnDesc'\nimport ColumnDescEmpty from './svg/ColumnDescEmpty'\n\nclass Servers extends React.Component {\n\tsortServers(columnName, isAsc) {\n\t\tconst compare = (a, b) => a[columnName] < b[columnName] ? -1 : 1;\n\t\tconst sortedArray = this.props.servers.slice().sort(compare);\n\t\tif(!isAsc) sortedArray.reverse();\n\t\tthis.props.addServers(sortedArray)\n\t\tisAsc ? this.props.sortServersAsc(columnName) : this.props.sortServersDesc(columnName);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<table className=\"servers-table\">\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t['name', 'distance'].map((name, index) => {\n\t\t\t\t\t\t\t\treturn <th key={index}>\n\t\t\t\t\t\t\t\t\t<div className=\"servers-table__header capitalize\">{ name }\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.props.sortedByColumnName !== name ?\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"servers-table__icons\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.sortServers(name, false)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnDescEmpty/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.sortServers(name, true)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnAscEmpty/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</span> :\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.isAsc ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"servers-table__icons\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.sortServers(name, false)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnDescEmpty/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnAsc/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"servers-table__icons\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnDesc/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.sortServers(name.toLowerCase(), true)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnAscEmpty/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</tr>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.servers.map((object, index) => {\n\t\t\t\t\t\t\treturn <Server key={index} name={object.name} distance={object.distance}/>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t)\n\t}\n}\n\nfunction mapDispatchToProps (dispatch) {\n\treturn {\n\t\tsortServersAsc: column => dispatch(sortServersAsc(column)),\n\t\tsortServersDesc: column => dispatch(sortServersDesc(column)),\n\t\taddServers: column => dispatch(addServers(column))\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tservers: state.servers.servers,\n\t\tsortedByColumnName: state.servers.sortedByColumnName,\n\t\tisAsc: state.servers.isAsc\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Servers)","export default {\n\tlogin: 'tokens',\n\tservers: 'servers'\n}","import React, { useState } from 'react'\n\nexport default (props) => {\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\treturn (\n\t\t<div className=\"login-form\">\n\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t<input type=\"text\" name=\"username\" value={username} onChange={event => {\n\t\t\t\tsetUsername(event.target.value)\n\t\t\t\tprops.resetErrors()\n\t\t\t}}/>\n\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t<input type=\"password\" name=\"password\" value={password} onChange={event => {\n\t\t\t\tsetPassword(event.target.value);\n\t\t\t\tprops.resetErrors()\n\t\t\t}}/>\n\t\t\t<button disabled={username.length === 0 || password.length === 0} type=\"submit\">Login</button>\n\t\t</div>\n\t)\n}\n\n","import React from 'react'\nimport axios from 'axios'\nimport API from '../api'\nimport { toggleLoader } from '../actions'\nimport { addServers } from '../reducers/servers';\nimport { connect } from 'react-redux'\nimport './LoginForm.scss'\nimport LoginFormInputs from './LoginFormInputs'\n\nclass LoginForm extends React.Component {\n\tstate = {\n\t\tauthToken: null,\n\t\tbadCredentials: false,\n\t\tserverError: false,\n\t}\n\t\n\thandleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tthis.props.toggleLoader();\n\t\tconst payload = {\n\t\t\tusername: event.target.username.value,\n\t\t\tpassword: event.target.password.value\n\t\t}\n\t\t\n\t\taxios.post(API.login, { ...payload }).then(response => {\n\t\t\tthis.setState({\n\t\t\t\tauthToken: response.data.token\n\t\t\t})\n\t\t\tthis.fetchServers()\n\t\t}).catch(error => {\n\t\t\tlet object = error.response.status === 401 ?\n\t\t\t\t{ badCredentials: true } :\n\t\t\t\t{ serverError: true }\n\t\t\tthis.setState(object);\n\t\t\tthis.props.toggleLoader();\n\t\t})\n\t}\n\tfetchServers = () => {\n\t\tif (!this.state.authToken) return\n\t\tlet config = {\n\t\t\theaders: {\n\t\t\t\t'Authorization': this.state.authToken\n\t\t\t}\n\t\t}\n\t\taxios.get(API.servers, config)\n\t\t     .then(response => this.props.addServers(response.data))\n\t\t     .catch(() => this.setState({ serverError: true }))\n\t\t     .finally(() => this.props.toggleLoader())\n\t}\n\tresetErrors = () => {\n\t\tthis.setState({\n\t\t\tbadCredentials: false,\n\t\t\tserverError: false\n\t\t})\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.setState = () => { return }\n\t}\n\t\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form className={this.state.badCredentials ? 'bad-input' : ''} onSubmit={this.handleSubmit}>\n\t\t\t\t\t<LoginFormInputs resetErrors={this.resetErrors}/>\n\t\t\t\t\t{this.state.badCredentials && <p>Login failed: Invalid username or password.</p>}\n\t\t\t\t\t{this.state.serverError && <p>Server error, please try again later.</p>}\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapDispatchToProps (dispatch) {\n\treturn {\n\t\taddServers: servers => dispatch(addServers(servers)),\n\t\ttoggleLoader: servers => dispatch(toggleLoader(servers))\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(LoginForm)","export const TOGGLE_LOADER = 'TOGGLE_LOADER'\n\nexport function toggleLoader() {\n\treturn { type: TOGGLE_LOADER }\n}","import React from 'react';\nimport './Loader.scss'\n\nexport default class Servers extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"overlay-background\">\n\t\t\t\t<div className=\"loader\"/>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport Servers from './components/Servers'\nimport LoginForm from './components/LoginForm'\nimport Loader from './components/Loader'\nimport { logOut } from './reducers/servers'\nimport './App.scss'\n\nclass App extends React.Component {\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ this.props.loader && <Loader/> }\n\t\t\t\t{\n\t\t\t\t\tthis.props.servers.length === 0 ?\n\t\t\t\t\t<LoginForm/> :\n\t\t\t\t\t(\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button className=\"logout-button\" onClick={() => this.props.logOut()}>Log out</button>\n\t\t\t\t\t\t\t<Servers/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapDispatchToProps (dispatch) {\n\treturn {\n\t\tlogOut: column => dispatch(logOut(column))\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tservers: state.servers.servers,\n\t\tloader: state.loader\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { combineReducers } from 'redux'\nimport servers from './servers'\nimport loader from './loader'\n\nexport default combineReducers({\n\tservers,\n\tloader\n})","import { TOGGLE_LOADER, } from '../actions'\n\nexport default function servers(state = false, action) {\n\tswitch (action.type) {\n\t\tcase TOGGLE_LOADER:\n\t\t\treturn !state;\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport rootReducer from './reducers'\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage: storage,\n\tblacklist: ['loader']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nlet store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nlet persistor = persistStore(store)\n\nexport {\n\tstore,\n\tpersistor,\n}\n","import React from 'react';\nimport { render } from 'react-dom'\nimport App from './App';\nimport axios from 'axios';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './configureStore'\n\naxios.defaults.baseURL = 'https://playground.tesonet.lt/v1/';\nrender(\n\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t<App/>\n\t\t</PersistGate>\n\t</Provider>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}